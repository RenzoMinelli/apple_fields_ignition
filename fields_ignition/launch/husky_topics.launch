<?xml version="1.0"?>
<launch>
  <arg name="world_name" default="field" />
  <arg name="name" default="costar_husky_sensor_config_1" />
  <arg name="link_name" value="base_link" />
  <arg name="sensor_prefix" value="/world/$(arg world_name)/model/$(arg name)/link/$(arg link_name)/sensor" />


  <node
    pkg="ros_ign_bridge"
    type="parameter_bridge"
    name="ros_ign_bridge_pose"
    args="/clock@rosgraph_msgs/Clock[ignition.msgs.Clock"></node>

  <group ns="$(arg name)">
    <!--Create multipe bridges so that it can run in parallel-->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_pose"
      args="/model/$(arg name)/pose@tf2_msgs/TFMessage[ignition.msgs.Pose_V">
      <remap from="/model/$(arg name)/pose" to="pose" />
    </node>
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_pose_static"
      args="/model/$(arg name)/pose_static@tf2_msgs/TFMessage[ignition.msgs.Pose_V">
      <remap from="/model/$(arg name)/pose_static" to="pose_static" />
    </node>

    <!-- <node
      pkg="subt_ros"
      type="pose_tf_broadcaster"
      name="pose_tf_broadcaster"/>  -->

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_twist"
      args="/cmd_vel@geometry_msgs/Twist@ignition.msgs.Twist">
      <remap from="/cmd_vel" to="cmd_vel" />
    </node>

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_odom"
      args="/model/$(arg name)/odometry@nav_msgs/Odometry[ignition.msgs.Odometry">
      <remap from="/model/$(arg name)/odometry" to="odom" />
    </node>


    <!-- Battery -->

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_battery_state"
      args="/model/$(arg name)/battery/linear_battery/state@sensor_msgs/BatteryState[ignition.msgs.BatteryState">
      <remap from="/model/$(arg name)/battery/linear_battery/state" to="battery_state" />
    </node>

    <!--left RGBD camera -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_camera_left"
      args="$(arg sensor_prefix)/camera_left/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg sensor_prefix)/camera_left/camera_info" to="left/camera_info" />
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_camera_left"
      args="$(arg sensor_prefix)/camera_left/image"
    >
      <remap from="$(arg sensor_prefix)/camera_left/image" to="left/image_raw" />
    </node>

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_camera_right"
      args="$(arg sensor_prefix)/camera_right/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg sensor_prefix)/camera_right/camera_info" to="right/camera_info" />
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_camera_right"
      args="$(arg sensor_prefix)/camera_right/image"
    >
      <remap from="$(arg sensor_prefix)/camera_right/image" to="right/image_raw" />
    </node>

    <!-- <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="optical_frame_publisher">
      <remap from="input/image" to="left/image_raw" />
      <remap from="output/image" to="left/optical/image_raw" />
      <remap from="input/camera_info" to="left/camera_info" />
      <remap from="output/camera_info" to="left/optical/camera_info" />
    </node> -->

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_rgbd"
      args="$(arg sensor_prefix)/camera_left/points@sensor_msgs/PointCloud2[ignition.msgs.PointCloudPacked">
      <remap from="$(arg sensor_prefix)/camera_left/points" to="rgbd_camera/depth/points" />
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_depth"
      args="$(arg sensor_prefix)/camera_left/depth_image">
      <remap from="$(arg sensor_prefix)/camera_left/depth_image" to="left/depth" />
    </node>

    <!-- <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="optical_frame_publisher_depth"
      args="depth">
      <remap from="input/image" to="left/depth" />
      <remap from="output/image" to="left/optical/depth" />
    </node> -->

    <!--left Laser-->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_lidar3d"
      args="$(arg sensor_prefix)/left_laser/scan/points@sensor_msgs/PointCloud2[ignition.msgs.PointCloudPacked">
      <remap from="$(arg sensor_prefix)/left_laser/scan/points" to="points" />
    </node>

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_gpu_lidar_left_cliff"
      args="$(arg sensor_prefix)/left_cliff_laser/scan@sensor_msgs/LaserScan[ignition.msgs.LaserScan">
      <remap from="$(arg sensor_prefix)/left_cliff_laser/scan" to="left_cliff_scan" />
    </node>

    <!--IMU-->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_imu"
      args="$(arg sensor_prefix)/imu_sensor/imu@sensor_msgs/Imu[ignition.msgs.IMU">
      <remap from="$(arg sensor_prefix)/imu_sensor/imu" to="imu/data" />
    </node>

    <!-- GPS -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_navsat"
      args="$(arg sensor_prefix)/gps/navsat@sensor_msgs/NavSatFix@ignition.msgs.NavSat">
      <remap from="$(arg sensor_prefix)/gps/navsat" to="gps/navsat" />
    </node>

    <!-- Gas sensor -->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_gas"
      args="/model/$(arg name)/gas_detected@std_msgs/Bool[ignition.msgs.Boolean">
      <remap from="/model/$(arg name)/gas_detected" to="gas_detected" />
    </node>
  </group>
</launch>